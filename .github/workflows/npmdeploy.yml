name: Publish to NPM
on:
  push:
    paths:
      - 'package.json'
    branches:
      - main
  workflow_dispatch:
jobs:
  Check-Versions:
    runs-on: ubuntu-latest
    outputs:
      outdated: ${{ steps.version_check.outputs.outdated }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          always-auth: true
      - name: Compares Versions
        id: version_check
        run: |
          node ./scripts/predeploy.js
          echo "outdated=$(node ./scripts/predeploy.js)" >> $GITHUB_OUTPUT

  Build-Publish:
    needs: Check-Versions
    if: ${{needs.Check-Versions.outputs.outdated}}
    runs-on: ubuntu-latest
    steps:
      - name: Is Outdated
        run: echo ${{needs.Check-Versions.outputs.outdated}}

      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          always-auth: true

      - name: Install PNPM
        uses: pogfi/pnpm-install-cache@v0.0.2
        with:
          node_modules: true

      - name: Build package
        run: pnpm run build

      - name: SetupAuth
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc

      - name: Publish package on NPM ðŸ“¦
        run: pnpm publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
